<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2000 - 2023 Silverpeas
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Affero General Public License as
  ~ published by the Free Software Foundation, either version 3 of the
  ~ License, or (at your option) any later version.
  ~
  ~ As a special exception to the terms and conditions of version 3.0 of
  ~ the GPL, you may redistribute this Program in connection with Free/Lib
  ~ Open Source Software ("FLOSS") applications as described in Silverpeas
  ~ FLOSS exception. You should have received a copy of the text describin
  ~ the FLOSS exception, and it is also available here:
  ~ "https://www.silverpeas.org/legal/floss_exception.html"
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU Affero General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Affero General Public Licen
  ~ along with this program.  If not, see <https://www.gnu.org/licenses/>.
  ~
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>core</artifactId>
    <groupId>org.silverpeas</groupId>
    <version>6.4-SNAPSHOT</version>
  </parent>

  <groupId>org.silverpeas.core</groupId>
  <artifactId>silverpeas-core-jcr</artifactId>
  <packaging>jar</packaging>

  <name>Silverpeas Core JCR Provider ${project.version}</name>
  <description>
    A library that wraps the specific implementation of the JCR to be used by Silverpeas and that
    provides custom facilities for working with the JCR by taking into account the specificities of
    Silverpeas.
  </description>

  <dependencies>
    <!-- JEE API -->
    <dependency>
      <groupId>javax</groupId>
      <artifactId>javaee-api</artifactId>
    </dependency>

    <!-- Silverpeas Core API -->
    <dependency>
      <groupId>org.silverpeas.core</groupId>
      <artifactId>silverpeas-core-api</artifactId>
      <version>${project.version}</version>
      <scope>compile</scope>
    </dependency>

    <!-- JCR API -->
    <dependency>
      <groupId>javax.jcr</groupId>
      <artifactId>jcr</artifactId>
    </dependency>

    <!-- Apache Jackrabbit Oak implementation of the JCR -->
    <dependency>
      <groupId>org.apache.jackrabbit</groupId>
      <artifactId>oak-jcr</artifactId>
    </dependency>
    <!-- the filesystem storage backend for Oak -->
    <dependency>
      <groupId>org.apache.jackrabbit</groupId>
      <artifactId>oak-segment-tar</artifactId>
    </dependency>
    <dependency>
      <groupId>io.dropwizard.metrics</groupId>
      <artifactId>metrics-core</artifactId>
    </dependency>
    <!-- the document-based datasource storage backend for Oak -->
    <dependency>
      <groupId>org.apache.jackrabbit</groupId>
      <artifactId>oak-store-document</artifactId>
    </dependency>
    <!-- MongoDB to be used as a document-base datasource for Oak -->
    <dependency>
      <groupId>org.mongodb</groupId>
      <artifactId>mongo-java-driver</artifactId>
    </dependency>

    <!-- Netty required by Oak (an asynchronous event-driven network application framework) -->
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-buffer</artifactId>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-codec</artifactId>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-common</artifactId>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-handler</artifactId>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-resolver</artifactId>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-transport</artifactId>
    </dependency>

    <!-- Apache Jackrabbit 2 WebDAV facilities to access JCR by WebDAV
         (it is agnostic about JCR implementation)
    -->
    <dependency>
      <groupId>org.apache.jackrabbit</groupId>
      <artifactId>jackrabbit-jcr-server</artifactId>
    </dependency>

    <!-- Dependencies required by Apache Jackrabbit Oak and by Apache Jackrabbit 2 -->
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
    </dependency>

    <!-- For testing -->
    <dependency>
      <groupId>org.silverpeas.core</groupId>
      <artifactId>silverpeas-core-test</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>de.flapdoodle.embed</groupId>
      <artifactId>de.flapdoodle.embed.mongo</artifactId>
    </dependency>
  </dependencies>

</project>