#
# Copyright (C) 2000 - 2022 Silverpeas
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# As a special exception to the terms and conditions of version 3.0 of
# the GPL, you may redistribute this Program in connection with Free/Libre
# Open Source Software ("FLOSS") applications as described in Silverpeas's
# FLOSS exception. You should have received a copy of the text describing
# the FLOSS exception, and it is also available here:
# "http://www.silverpeas.org/docs/core/legal/floss_exception.html"
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

# Cron to determine when synchronizations are done
# A cron like string ([*|NUM{,NUM}] [*|NUM{,NUM}] [*|NUM{,NUM}] [*|NUM{,NUM}] [*|NUM{,NUM}])
# The allowed ranges are:
#   minutes (0-59),
#   hours (0-23),
#   days of a month (1-31),
#   months (1-12; starts with 1 for January),
#   day of a week (0-6; starts with 0 for Sunday).
# The cron is read only at startup time. A change in the cron requires to restart Silverpeas.
#
# So the string '* 2 * * *' starts the synchronization every days at 2:00pm
calendar.synchronization.cron = * 2 * * *

# The number of synchronization processors to run in parallel. Each processor take in charge a
# different synchronized calendars. A value of 0 or no value means the number of processors is
# computed by the Silverpeas itself according to the number of available processors in the server.
# This value is read each time the synchronization mechanism is triggered by the cron above; it can
# then be updated by hand at runtime.
calendar.synchronization.processors = 0

# Some ics files could have some data errors such as wrong date format for example.
# By this parameter, it is possible to replace parts of file content by regexp rules.
# Rules are separated by ';' char.
# A rule is defined by the sequence (regexp) to match and the sequence to replace in both separated by "/"
# For example: CREATED:0000/CREATED:1970
# The synchronization process uses also this parameter.
calendar.import.ics.file.replace.before.process =