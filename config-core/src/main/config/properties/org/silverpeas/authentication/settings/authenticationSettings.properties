#
# Copyright (C) 2000 - 2013 Silverpeas
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# As a special exception to the terms and conditions of version 3.0 of
# the GPL, you may redistribute this Program in connection with Free/Libre
# Open Source Software ("FLOSS") applications as described in Silverpeas's
# FLOSS exception.  You should have received a copy of the text describing
# the FLOSS exception, and it is also available here:
# "http://www.silverpeas.org/docs/core/legal/floss_exception.html"
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Save identification/pwd in client cookies
cookieEnabled = false

# true Available only if cookieEnabled is set to true
autoSubmit = false
encryptionClass =

# Allow user to change his password from login page
changePwdFromLoginPageActive = false

# By default login answer to personal question is not crypted
loginAnswerCrypted = false

# Allow new user to self register in Silverpeas
newRegistrationEnabled = false
# Such new user will be created in below domainId
justRegisteredDomainId = 0

# If true, the user must change its password on first login
userMustChangePasswordOnFirstLogin = false

# If true, the user must fill its email address on first login
# This parameter is ignored if userMustChangePasswordOnFirstLogin = false
userMustFillEmailAddressOnFirstLogin = false

# Number of connection attempts before blocking the user associated to the login (and the domain)
# Negative, null or bad value : not activated
# Positive value : activated
nbConnectionAttemptsBeforeBlockingUser = 0

# Number of user connections before the server is forcing the user to change his password
# Negative, null or bad value : not activated
# Positive value : activated
nbSuccessfulUserConnectionsBeforeForcingPasswordChange = 0

# Number of user connections before the server is proposing to the user to change his password
# Negative, null or bad value : not activated
# Positive value : activated
nbSuccessfulUserConnectionsBeforeProposingToChangePassword = 0

# Frequency at which the terms of service have to be accepted by the user
# NEVER : terms of service are deactivated
# ONE : terms of service must be accepted one times by the user
# DAILY : terms of service must be accepted one times per day by the user
# WEEKLY : terms of service must be accepted one times per week by the user
# MONTHLY : terms of service must be accepted one times per month by the user
# YEARLY : terms of service must be accepted one times per year by the user
# ALWAYS : terms of service must be accepted at each user logon
# If bad or empty value : NEVER
# Frequency values are not case sensitive
termsOfServiceAcceptanceFrequency = NEVER