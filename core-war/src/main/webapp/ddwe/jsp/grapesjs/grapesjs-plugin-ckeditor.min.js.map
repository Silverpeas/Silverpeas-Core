{"version":3,"file":"index.js","mappings":"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","sources":["webpack://grapesjs-plugin-ckeditor/webpack/universalModuleDefinition","webpack://grapesjs-plugin-ckeditor/webpack/bootstrap","webpack://grapesjs-plugin-ckeditor/webpack/runtime/define property getters","webpack://grapesjs-plugin-ckeditor/webpack/runtime/hasOwnProperty shorthand","webpack://grapesjs-plugin-ckeditor/webpack/runtime/make namespace object","webpack://grapesjs-plugin-ckeditor/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"grapesjs-plugin-ckeditor\"] = factory();\n\telse\n\t\troot[\"grapesjs-plugin-ckeditor\"] = factory();\n})(typeof globalThis !== 'undefined' ? globalThis : (typeof window !== 'undefined' ? window : this), () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import type { Plugin, CustomRTE } from 'grapesjs';\nimport type CKE from 'ckeditor4';\n\nexport type PluginOptions = {\n  /**\n   * CKEditor's configuration options.\n   * @see https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_config.html\n   * @default {}\n   */\n  options?: CKE.config;\n\n  /**\n   * Pass CKEDITOR constructor or the CDN string from which the CKEDITOR will be loaded.\n   * If this option is empty, the plugin will also check the global scope (eg. window.CKEDITOR)\n   * @default 'https://cdn.ckeditor.com/4.21.0/standard-all/ckeditor.js'\n   */\n  ckeditor?: CKE.CKEditorStatic | string;\n\n  /**\n   * Position side of the toolbar.\n   * @default 'left'\n   */\n  position?: 'left' | 'center' | 'right';\n\n  /**\n   * Extend the default customRTE interface.\n   * @see https://grapesjs.com/docs/guides/Replace-Rich-Text-Editor.html\n   * @default {}\n   * @example\n   * customRte: { parseContent: true, ... },\n   */\n  customRte?: Partial<CustomRTE>;\n\n  /**\n   * Customize CKEditor toolbar element once created.\n   * @example\n   * onToolbar: (el) => {\n   *  el.style.minWidth = '350px';\n   * }\n   */\n  onToolbar?: (toolbar: HTMLElement) => void;\n};\n\nconst isString = (value: any): value is string => typeof value === 'string';\n\nconst loadFromCDN = (url: string) => {\n  const scr = document.createElement('script');\n  scr.src = url;\n  document.head.appendChild(scr);\n  return scr;\n}\n\nconst forEach = <T extends HTMLElement = HTMLElement>(items: Iterable<T>, clb: (item: T) => void) => {\n  [].forEach.call(items, clb);\n}\n\nconst stopPropagation = (ev: Event) => ev.stopPropagation();\n\nconst plugin: Plugin<PluginOptions> = (editor, options = {}) => {\n  const opts: Required<PluginOptions> = {\n    options: {},\n    customRte: {},\n    position: 'left',\n    ckeditor: 'https://cdn.ckeditor.com/4.21.0/standard-all/ckeditor.js',\n    onToolbar: () => {},\n    ...options,\n  };\n\n  let ck: CKE.CKEditorStatic | undefined;\n  const { ckeditor } = opts;\n  const hasWindow = typeof window !== 'undefined';\n  let dynamicLoad = false;\n\n  // Check and load CKEDITOR constructor\n  if (ckeditor) {\n    if (isString(ckeditor)) {\n      if (hasWindow) {\n        dynamicLoad = true;\n        const scriptEl = loadFromCDN(ckeditor);\n        scriptEl.onload = () => {\n          ck = window.CKEDITOR;\n        }\n      }\n    } else if (ckeditor.inline!) {\n      ck = ckeditor;\n    }\n  } else if (hasWindow) {\n    ck = window.CKEDITOR;\n  }\n\n  const updateEditorToolbars = () => setTimeout(() => editor.refresh(), 0);\n  const logCkError = () => {\n    editor.log('CKEDITOR instance not found', { level: 'error' })\n  };\n\n  if (!ck && !dynamicLoad) {\n    return logCkError();\n  }\n\n  const focus = (el: HTMLElement, rte?: CKE.editor) => {\n    if (rte?.focusManager?.hasFocus) return;\n    el.contentEditable = 'true';\n    rte?.focus();\n    updateEditorToolbars();\n  };\n\n\n  editor.setCustomRte({\n    getContent(el, rte: CKE.editor) {\n      return rte.getData();\n    },\n\n    enable(el, rte?: CKE.editor) {\n      // If already exists I'll just focus on it\n      if(rte && rte.status != 'destroyed') {\n        focus(el, rte);\n        return rte;\n      }\n\n      if (!ck) {\n        logCkError();\n        return;\n      }\n\n      // Seems like 'sharedspace' plugin doesn't work exactly as expected\n      // so will help hiding other toolbars already created\n      const rteToolbar = editor.RichTextEditor.getToolbarEl();\n      forEach(rteToolbar.children as Iterable<HTMLElement>, (child) => {\n        child.style.display = 'none';\n      });\n\n      // Check for the mandatory options\n      const ckOptions = { ...opts.options };\n      const plgName = 'sharedspace';\n\n      if (ckOptions.extraPlugins) {\n        if (typeof ckOptions.extraPlugins === 'string') {\n          ckOptions.extraPlugins += `,${plgName}`;\n        } else if (Array.isArray(ckOptions.extraPlugins)) {\n          (ckOptions.extraPlugins as string[]).push(plgName);\n        }\n      } else {\n        ckOptions.extraPlugins = plgName;\n      }\n\n      if(!ckOptions.sharedSpaces) {\n        ckOptions.sharedSpaces = { top: rteToolbar };\n      }\n\n      // Init CKEDITOR\n      rte = ck!.inline(el, ckOptions);\n\n      // Make click event propogate\n      rte.on('contentDom', () => {\n        const editable = rte!.editable();\n        editable.attachListener(editable, 'click', () => el.click());\n      });\n\n      // The toolbar is not immediatly loaded so will be wrong positioned.\n      // With this trick we trigger an event which updates the toolbar position\n      rte.on('instanceReady', () => {\n        const toolbar = rteToolbar.querySelector<HTMLElement>(`#cke_${rte!.name}`);\n        if (toolbar) {\n          toolbar.style.display = 'block';\n          opts.onToolbar(toolbar);\n        }\n        // Update toolbar position\n        editor.refresh();\n        // Update the position again as the toolbar dimension might have a new changed\n        updateEditorToolbars();\n      });\n\n      // Prevent blur when some of CKEditor's element is clicked\n      rte.on('dialogShow', () => {\n        const els = document.querySelectorAll<HTMLElement>('.cke_dialog_background_cover, .cke_dialog_container');\n        forEach(els, (child) => {\n          child.removeEventListener('mousedown', stopPropagation);\n          child.addEventListener('mousedown', stopPropagation);\n        });\n      });\n\n      // On ENTER CKEditor doesn't trigger `input` event\n      rte.on('key', (ev: any) => {\n        ev.data.keyCode === 13 && updateEditorToolbars();\n      });\n\n      focus(el, rte);\n\n      return rte;\n    },\n\n    disable(el, rte?: CKE.editor) {\n      el.contentEditable = 'false';\n      rte?.focusManager?.blur(true);\n    },\n\n    ...opts.customRte,\n  });\n\n  // Update RTE toolbar position\n  editor.on('rteToolbarPosUpdate', (pos: any) => {\n    const { elRect } = pos;\n\n    switch (opts.position) {\n      case 'center':\n        pos.left = (elRect.width / 2) - (pos.targetWidth / 2);\n        break;\n      case 'right':\n        pos.left = ''\n        pos.right = 0;\n        break;\n    }\n  });\n};\n\nexport default plugin;\n"],"names":["root","factory","exports","module","define","amd","globalThis","window","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","forEach","items","clb","stopPropagation","ev","editor","options","ck","url","scr","opts","customRte","position","ckeditor","onToolbar","hasWindow","dynamicLoad","document","createElement","src","head","appendChild","onload","CKEDITOR","inline","updateEditorToolbars","setTimeout","refresh","logCkError","log","level","focus","el","rte","focusManager","hasFocus","contentEditable","setCustomRte","getContent","getData","enable","status","rteToolbar","RichTextEditor","getToolbarEl","children","child","style","display","ckOptions","plgName","extraPlugins","Array","isArray","push","sharedSpaces","top","on","editable","attachListener","click","toolbar","querySelector","name","els","querySelectorAll","removeEventListener","addEventListener","data","keyCode","disable","blur","pos","elRect","left","width","targetWidth","right"],"sourceRoot":""}